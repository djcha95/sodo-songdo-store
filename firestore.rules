rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isAdmin() {
      return request.auth.token.role in ['admin', 'master'];
    }

    // --- 공개 정보 (누구나 읽기 가능, 쓰기는 관리자만) ---
    match /products/{productId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    match /banners/{bannerId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    match /categories/{categoryId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    match /storeInfo/{docId} {
      allow read: if true;
      allow write: if isAdmin();
    }


    // --- 사용자 정보 ---
    match /users/{userId} {
      allow get: if request.auth.uid == userId || isAdmin();
      allow list: if isAdmin();
      allow create: if request.auth.uid == userId || isAdmin();
      allow update: if (request.auth.uid == userId
                        && !('role' in request.resource.data)
                        && !('points' in request.resource.data))
                      || isAdmin();
      allow delete: if isAdmin();

      // ✅ [신규 추가] cart 서브컬렉션에 대한 명시적 규칙
      // 자신의 장바구니는 본인만 모든 작업을 할 수 있습니다.
      match /cart/{cartItemId} {
        allow read, write, delete: if request.auth.uid == userId;
      }

      // ✅ [수정] 기타 서브컬렉션 규칙 (cart 제외)
      // notifications, pointHistory 등은 본인 또는 관리자만 접근 가능합니다.
      match /{subcollection}/{docId} {
        allow read, write: if subcollection != 'cart' && (request.auth.uid == userId || isAdmin());
      }
    }

    // --- 주문 정보 ---
    match /orders/{orderId} {
      allow get: if request.auth.uid == resource.data.userId || isAdmin();
      allow list: if isAdmin();
      allow create: if request.auth.uid == request.resource.data.userId;
      allow update: if isAdmin();
      allow delete: if isAdmin();
    }
  }
}